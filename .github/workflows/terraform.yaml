name: Terraform CI/CD
on:
  push:
    branches:
      - master
      - main
permissions:
  id-token: write
  contents: read

jobs:
  misspell:
    name: misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: misspell
        uses: reviewdog/action-misspell@v1.12.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          locale: "US"
          level: warning
          filter_mode: file
  terraform:
    strategy:
      max-parallel: 4
      matrix:
        workspace: ["1-project", "2-web-app"]

    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::190281595713:role/gh-deployment-role
          role-session-name: gh-deployment-role
      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -check -diff
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform/${{ matrix.workspace }}
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform/${{ matrix.workspace }}
      - name: Terraform Security Scanner
        id: tfsec
        uses: reviewdog/action-tfsec@v1.15.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: warning
      - name: Terraform Linter
        id: tflint
        uses: reviewdog/action-tflint@v1.17.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: warning
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform/${{ matrix.workspace }}
